{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/utills/ApiService.js","components/Button/Button.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","modalRoot","document","querySelector","Modal","closeModalEsc","e","code","props","onClose","onOverlayClick","target","currentTarget","window","addEventListener","this","style","overflow","removeEventListener","largeImageURL","tags","createPortal","className","styled","Overlay","onClick","src","alt","Component","ImageGalleryItem","state","showModal","toggleModal","setState","prevState","webformatURL","name","ImageGalleryItemImage","api","searchQuery","page","fetchQuery","apiUrl","fetch","then","response","ok","json","Promise","reject","Error","incrementPage","resetPage","Button","onBtnLoadClick","buttonWrapper","type","button","LoaderSpinner","loaderWrapper","color","height","width","ImageGallery","arrImg","loading","onLoadMoreClick","saveImages","prevProps","prevQuery","nextQuery","scrollTo","top","documentElement","scrollHeight","behavior","res","hits","length","toast","error","catch","console","log","finally","map","index","Loader","Searchbar","onHandleInputChange","value","onSubmit","preventDefault","trim","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","App","onNewQuery","autoClose","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fb5e8594.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1jyOH\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__LeFD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3jE1m\",\"Modal\":\"Modal_Modal__2XPFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2ZVUd\",\"buttonWrapper\":\"Button_buttonWrapper__3BnCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1XYd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Loader_loaderWrapper__2apIp\"};","import React, { Component } from \"react\"\r\nimport { createPortal } from \"react-dom\"\r\nimport styled from \"./Modal.module.css\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst modalRoot = document.querySelector(\"#modal\")\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func,\r\n    largeImageURL: PropTypes.string,\r\n    tags: PropTypes.string,\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeModalEsc)\r\n    const body = document.querySelector(\"body\")\r\n    body.style.overflow = \"hidden\"\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeModalEsc)\r\n    const body = document.querySelector(\"body\")\r\n    body.style.overflow = \"\"\r\n  }\r\n\r\n  closeModalEsc = (e) => {\r\n    if (e.code === \"Escape\") this.props.onClose()\r\n  }\r\n\r\n  onOverlayClick = (e) => {\r\n    if (e.target === e.currentTarget) this.props.onClose()\r\n  }\r\n\r\n  render() {\r\n    const { largeImageURL, tags } = this.props\r\n    return createPortal(\r\n      <div className={styled.Overlay} onClick={this.onOverlayClick}>\r\n        <div className={styled.Modal}>\r\n          <img src={largeImageURL} alt={tags} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    )\r\n  }\r\n}\r\n\r\nexport default Modal\r\n","import React, { Component } from \"react\"\r\n\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport styled from \"./ImageGalleryItem.module.css\"\r\nimport Modal from \"../Modal/Modal\"\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = { showModal: false }\r\n\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      showModal: !prevState.showModal,\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const { webformatURL, largeImageURL, name } = this.props\r\n\r\n    return (\r\n      <li className={styled.ImageGalleryItem}>\r\n        <img src={webformatURL} alt={name} className={styled.ImageGalleryItemImage} onClick={this.toggleModal} />\r\n        {this.state.showModal && <Modal onClose={this.toggleModal} largeImageURL={largeImageURL} alt={name} />}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  name: PropTypes.string,\r\n}\r\n\r\nexport default ImageGalleryItem\r\n","const apiKey = \"22768423-65df9381e505940710ceeb6f4\"\r\nconst perPage = 12\r\n\r\nfunction fetchQuery() {\r\n  const apiUrl = `https://pixabay.com/api/?q=${this.searchQuery}&page=${this.page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=${perPage}`\r\n  return fetch(apiUrl).then((response) => {\r\n    if (response.ok) {\r\n      return response.json()\r\n    }\r\n    return Promise.reject(new Error(`\"${this.searchQuery}\" did't found`))\r\n  })\r\n}\r\n\r\nfunction incrementPage() {\r\n  this.page += 1\r\n}\r\n\r\nfunction resetPage() {\r\n  this.page = 1\r\n}\r\n\r\nconst api = {\r\n  searchQuery: \"\",\r\n  page: 1,\r\n  fetchQuery,\r\n  incrementPage,\r\n  resetPage,\r\n}\r\n\r\nexport default api\r\n","import styled from \"./Button.module.css\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Button = ({ onBtnLoadClick }) => {\r\n  return (\r\n    <div className={styled.buttonWrapper}>\r\n      <button onClick={onBtnLoadClick} type=\"button\" className={styled.button}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\nButton.propTypes = {\r\n  onBtnLoadClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import Loader from \"react-loader-spinner\"\r\nimport styled from \"./Loader.module.css\"\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <div className={styled.loaderWrapper}>\r\n      <Loader type=\"Circles\" color=\"#3f51b5\" height={80} width={80} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoaderSpinner\r\n","import React, { Component } from \"react\"\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\"\r\nimport styled from \"./ImageGallery.module.css\"\r\n\r\nimport { toast } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\n\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport api from \"../utills/ApiService\"\r\nimport Button from \"../Button/Button\"\r\nimport LoaderSpinner from \"../Loader/Loader\"\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    arrImg: [],\r\n    loading: false,\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevProps.searchQuery\r\n    const nextQuery = this.props.searchQuery\r\n\r\n    if (prevQuery !== nextQuery) {\r\n      this.setState({ arrImg: [] })\r\n      api.resetPage()\r\n      api.searchQuery = nextQuery\r\n      this.saveImages()\r\n    }\r\n\r\n    if (api.page > 1) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: \"smooth\",\r\n      })\r\n    }\r\n  }\r\n\r\n  saveImages() {\r\n    this.setState({ loading: true })\r\n    const notifyError = () => toast.error(\"Images wasn`t found\")\r\n\r\n    api\r\n      .fetchQuery()\r\n      .then((res) => {\r\n        if (!res.hits.length) notifyError()\r\n        this.setState((prevState) => ({\r\n          arrImg: [...prevState.arrImg, ...res.hits],\r\n        }))\r\n      })\r\n\r\n      .catch((error) => console.log(error))\r\n      .finally(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  onLoadMoreClick = () => {\r\n    api.incrementPage()\r\n    this.saveImages()\r\n  }\r\n\r\n  render() {\r\n    const { arrImg, loading } = this.state\r\n    return (\r\n      <>\r\n        <ul className={styled.ImageGallery}>\r\n          {arrImg.map(({ webformatURL, tags, largeImageURL }, index) => (\r\n            <ImageGalleryItem webformatURL={webformatURL} name={tags} key={index} largeImageURL={largeImageURL} />\r\n          ))}\r\n        </ul>\r\n        {arrImg.length > 1 && !loading && <Button onBtnLoadClick={this.onLoadMoreClick} />}\r\n        {loading && <LoaderSpinner />}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  searchQuery: PropTypes.string,\r\n}\r\n\r\nexport default ImageGallery\r\n","import React, { Component } from \"react\"\r\n\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport styled from \"./Searchbar.module.css\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nclass Searchbar extends Component {\r\n  state = { searchQuery: \"\" }\r\n\r\n  onHandleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (this.state.searchQuery.trim() === \"\") {\r\n      return toast.error(\"Please enter the date\")\r\n    }\r\n    this.props.onSubmit(this.state)\r\n  }\r\n\r\n  render() {\r\n    const { searchQuery } = this.state\r\n    return (\r\n      <header className={styled.Searchbar}>\r\n        <form onSubmit={this.onSubmit} className={styled.SearchForm}>\r\n          <button type=\"submit\" className={styled.SearchFormButton}>\r\n            <span className={styled.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styled.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.onHandleInputChange}\r\n            value={searchQuery}\r\n            name=\"searchQuery\"\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default Searchbar\r\n","import React, { Component } from \"react\"\nimport { ToastContainer } from \"react-toastify\"\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\"\nimport Searchbar from \"./components/Searchbar/Searchbar\"\n\nclass App extends Component {\n  state = { searchQuery: \"\" }\n\n  onNewQuery = ({ searchQuery }) => {\n    this.setState({ searchQuery })\n  }\n\n  render() {\n    const { searchQuery } = this.state\n    return (\n      <>\n        <Searchbar onSubmit={this.onNewQuery} />\n        <ImageGallery searchQuery={searchQuery} />\n        <ToastContainer autoClose={2000} />\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__14SkJ\",\"SearchForm\":\"Searchbar_SearchForm__1xD1R\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1LqLP\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1aa-F\",\"SearchFormInput\":\"Searchbar_SearchFormInput__11gho\",\"SearchFormInputt\":\"Searchbar_SearchFormInputt__YmfOD\"};"],"sourceRoot":""}